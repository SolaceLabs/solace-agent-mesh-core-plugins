# This is the configuration file for the bedrock agent agent
#
# It fulfills a few functions:
# 1. A flow to do periodic registration of this agent with the orchestrator
# 2. A flow to process action requests and produce action responses
#    This requires a custom component to process the action requests

---
log:
  stdout_log_level: INFO
  log_file_level: INFO
  log_file: solace_ai_connector.log

shared_config:
  - broker_config: &broker_connection
      dev_mode: ${SOLACE_DEV_MODE, false}
      broker_url: ${SOLACE_BROKER_URL}
      broker_username: ${SOLACE_BROKER_USERNAME}
      broker_password: ${SOLACE_BROKER_PASSWORD}
      broker_vpn: ${SOLACE_BROKER_VPN}
      temporary_queue: ${USE_TEMPORARY_QUEUES, false}

flows:

  # Flow to handle action requests
  - name: {{SNAKE_CASE_NAME}}_action_request_processor
    components:
      # Input from a Solace broker
      - component_name: broker_input
        component_module: broker_input
        component_config:
          <<: *broker_connection
          payload_encoding: utf-8
          payload_format: json
          broker_queue_name: ${SOLACE_AGENT_MESH_NAMESPACE}agent_{{SNAKE_CASE_NAME}}_action_request
          broker_subscriptions:
            # Subscribe to all bedrock_agent actions - note that if we
            # wanted to handle some bedrock_agent actions elsewhere, we would
            # need to be more specific here
            - topic: ${SOLACE_AGENT_MESH_NAMESPACE}solace-agent-mesh/v1/actionRequest/*/*/{{SNAKE_CASE_NAME}}/>
              qos: 1

      # Custom component to process the action request
      - component_name: action_request_processor
        component_base_path: .
         # path is completed at build time
        component_module: {{MODULE_DIRECTORY}}.agents.bedrock_agent.bedrock_agent_agent_component
        component_config:
          # SAM agent configuration
          agent_name: {{SNAKE_CASE_NAME}}
          agent_description: "Amazon Bedrock agent" # Description that would be used in the orchestrator to select this agent
          always_open: false # Whether all actions should be visible to the orchestrator always or only when required
          llm_service_topic: ${SOLACE_AGENT_MESH_NAMESPACE}solace-agent-mesh/v1/llm-service/request/general-good/
          embedding_service_topic: ${SOLACE_AGENT_MESH_NAMESPACE}solace-agent-mesh/v1/embedding-service/request/text/

          # Amazon Bedrock agent configuration
          amazon_bedrock_runtime_config:
            # AWS Endpoint URL - Optional
            endpoint_url:
            # AWS S3 configuration - https://boto3.amazonaws.com/v1/documentation/api/latest/reference/core/session.html
            # The following object is passed as kwargs to boto3.session.Session
            boto3_config:
              # AWS region name
              region_name: "us-east-1"
              # AWS credentials
              aws_access_key_id: # You can also use profiles instead, check boto3 documentation
              aws_secret_access_key:

          bedrock_agents: # Optional, but at least one bedrock_agent or bedrock_flow must be provided
            # EXAMPLE of a bedrock agent, Add as many needed
            - name: invoke_agent # The name of the action
              description: "Invoke the bedrock agent" # Description of the Amazon bedrock agent
              param_description: "Input to send to the action." # [Optional] Description of the parameter to be pass to the action, 
              bedrock_agent_id: "FAKE_AGENT_ID" # The ID of the Amazon bedrock agent
              bedrock_agent_alias_id: "FAKE_AGENT_ALIAS_ID" # The alias ID of the Amazon bedrock agent
              allow_files: false # Whether to allow uploading file to the agent. Limit: 5 files (10MB total size) - Supported formats: .pdf, .txt, .doc, .csv, .xls, .xlsx

          bedrock_flows: # Optional, but at least one bedrock_agent or bedrock_flow must be provided
            # EXAMPLE of a bedrock flow, Add as many needed
            - name: invoke_flow # The name of the action
              description: "Invoke the bedrock flow" # Description of the Amazon bedrock flow
              param_description: "Input to send to the flow." # [Optional] Description of the parameter to be pass to the action, 
              bedrock_flow_id: "FAKE_FLOW_ID" # The ID of the Amazon bedrock flow
              bedrock_flow_alias_id: "FAKE_FLOW_ALIAS_ID" # The alias ID of the Amazon bedrock flow

        broker_request_response:
          enabled: true
          broker_config: *broker_connection
          request_expiry_ms: 120000
          payload_encoding: utf-8
          payload_format: json
          response_topic_prefix: ${SOLACE_AGENT_MESH_NAMESPACE}solace-agent-mesh/v1
          response_queue_prefix: ${SOLACE_AGENT_MESH_NAMESPACE}solace-agent-mesh/v1
        component_input:
          source_expression: input.payload

      # Output to a Solace broker
      - component_name: broker_output
        component_module: broker_output
        component_config:
          <<: *broker_connection
          payload_encoding: utf-8
          payload_format: json
          copy_user_properties: true
