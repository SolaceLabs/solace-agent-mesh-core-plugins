# This is the configuration file for the mermaid agent
#
# It fulfills a few functions:
# 1. A flow to do periodic registration of this agent with the orchestrator
# 2. A flow to process action requests and produce action responses
#    This requires a custom component to process the action requests

---
log:
  stdout_log_level: INFO
  log_file_level: INFO
  log_file: solace_ai_connector.log

shared_config:
  - broker_config: &broker_connection
      broker_type: ${BROKER_TYPE, solace}
      broker_url: ${SOLACE_BROKER_URL}
      broker_username: ${SOLACE_BROKER_USERNAME}
      broker_password: ${SOLACE_BROKER_PASSWORD}
      broker_vpn: ${SOLACE_BROKER_VPN}
      temporary_queue: ${USE_TEMPORARY_QUEUES, false}

flows:

  # Flow to handle action requests
  - name: mermaid_action_request_processor
    components:
      # Input from a Solace broker
      - component_name: broker_input
        component_module: broker_input
        component_config:
          <<: *broker_connection
          payload_encoding: utf-8
          payload_format: json
          broker_queue_name: ${SOLACE_AGENT_MESH_NAMESPACE}agent_mermaid_action_request
          broker_subscriptions:
            # Subscribe to all mermaid actions - note that if we
            # wanted to handle some mermaid actions elsewhere, we would
            # need to be more specific here
            - topic: ${SOLACE_AGENT_MESH_NAMESPACE}solace-agent-mesh/actionRequest/*/*/mermaid/>
              qos: 1

      # Custom component to process the action request
      - component_name: action_request_processor
        component_base_path: .
         # path is completed at build time
        component_module: {{MODULE_DIRECTORY}}.agents.mermaid.mermaid_agent_component
        component_config:
          llm_service_topic: ${SOLACE_AGENT_MESH_NAMESPACE}solace-agent-mesh/llm-service/request/general-good/
          embedding_service_topic: ${SOLACE_AGENT_MESH_NAMESPACE}solace-agent-mesh/embedding-service/request/text/
          # Pass required configuration to the component
        broker_request_response:
          enabled: true
          broker_config: *broker_connection
          request_expiry_ms: 120000
          payload_encoding: utf-8
          payload_format: json
          response_topic_prefix: ${SOLACE_AGENT_MESH_NAMESPACE}solace-agent-mesh
          response_queue_prefix: ${SOLACE_AGENT_MESH_NAMESPACE}solace-agent-mesh
        component_input:
          source_expression: input.payload

      # Output to a Solace broker
      - component_name: broker_output
        component_module: broker_output
        component_config:
          <<: *broker_connection
          payload_encoding: utf-8
          payload_format: json
          copy_user_properties: true
