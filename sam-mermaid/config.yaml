# Plugin Metadata:
# Name: sam-mermaid
# Version: 0.1.0
# Description: This plugin is used to generate visualizations using Mermaid.js
# Author: SolaceLabs <solacelabs@solace.com>

log:
  stdout_log_level: INFO
  log_file_level: DEBUG
  log_file: __COMPONENT_KEBAB_CASE_NAME__.log

# To use the `shared_config.yaml` file, uncomment the following line and remove the `shared_config` section below.
# !include ../shared_config.yaml
shared_config:
  - broker_connection: &broker_connection
      dev_mode: ${SOLACE_DEV_MODE, false}
      broker_url: ${SOLACE_BROKER_URL, ws://localhost:8080}
      broker_username: ${SOLACE_BROKER_USERNAME, default}
      broker_password: ${SOLACE_BROKER_PASSWORD, default}
      broker_vpn: ${SOLACE_BROKER_VPN, default}
      temporary_queue: ${USE_TEMPORARY_QUEUES, true}

  - models:
    general: &general_model
      # This dictionary structure tells ADK to use the LiteLlm wrapper.
      # 'model' uses the specific model identifier your endpoint expects.
      model: ${LLM_SERVICE_GENERAL_MODEL_NAME} # Use env var for model name
      # 'api_base' tells LiteLLM where to send the request.
      api_base: ${LLM_SERVICE_ENDPOINT} # Use env var for endpoint URL
      # 'api_key' provides authentication.
      api_key: ${LLM_SERVICE_API_KEY} # Use env var for API key

  - services:
    # Default session service configuration
    session_service: &default_session_service
      type: "memory"
      default_behavior: "PERSISTENT"
    
    # Default artifact service configuration
    artifact_service: &default_artifact_service
      type: "filesystem"
      base_path: "/tmp/samv2"
      artifact_scope: namespace # Or "namespace", "app", "custom"

apps:
  - name: __COMPONENT_KEBAB_CASE_NAME__-app
    app_base_path: . 
    app_module: solace_agent_mesh.agent.sac.app 
    broker:
      <<: *broker_connection

    # App Level Config
    app_config:
      namespace: ${NAMESPACE} 
      supports_streaming: true 
      agent_name: "__COMPONENT_PASCAL_CASE_NAME__" 
      display_name: "__COMPONENT_PASCAL_CASE_NAME__ Component" 
      model: *general_model 

      instruction: |
        This is a component created from the __COMPONENT_PASCAL_CASE_NAME__ plugin.
        Configure its specific instructions here.

      tools:
        - group_name: artifact_management
          tool_type: builtin-group

        - tool_type: python
          component_module: "sam_mermaid.draw"
          function_name: "draw"
          tool_name: "draw_mermaid_diagram"
          tool_config:
            mermaid_server_url: ${MERMAID_SERVER_URL} # Get URL from environment

      session_service: *default_session_service
      artifact_service: *default_artifact_service

      artifact_handling_mode: "embed"
      enable_embed_resolution: true
      enable_artifact_content_instruction: true

      agent_card:
        description: "This plugin is used to generate visualizations using Mermaid.js"
        defaultInputModes: ["text"]
        defaultOutputModes: ["text"]
        skills:
          - id: "draw_mermaid_diagram"
            name: "draw_mermaid_diagram"
            description: "Generates a diagram (PNG format) from the provided Mermaid.js syntax string."

      agent_card_publishing: { interval_seconds: 10 }
      agent_discovery: { enabled: false }
      inter_agent_communication:
        allow_list: []
        request_timeout_seconds: 30