[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.metadata]
allow-direct-references = true

[project]
name = "sam-a2a-client"
dynamic = ["version"]
authors = [
  { name="SolaceLabs", email="solacelabs@solace.com" },
]
description = "Solace Agent Mesh plugin to interact with A2A (Agent-to-Agent) protocol compliant agents."
readme = "README.md"
requires-python = ">=3.10" # Align with SAM core if possible, A2A samples use 3.12
dependencies = [
  # Add solace-agent-mesh dependency once available or use relative path for dev
  # "solace-agent-mesh",
  "requests>=2.30.0", # For checking agent readiness
  # Dependency for the google/A2A common library needs to be determined.
  # Assuming it's installed via the workspace for now.
  # If published: "a2a-common-python",
  # If git: "a2a-common-python @ git+https://github.com/google/A2A.git#subdirectory=samples/python/common",
  "pydantic>=2.0", # Needed by A2A common types
  "httpx>=0.25.0", # Needed by A2A common client
  "httpx-sse>=0.4.0", # Needed by A2A common client for streaming (though not used initially)
  "jwcrypto>=1.5.0", # Likely needed if push notification auth is used by common lib
  "python-jose>=3.3.0", # Alternative/complement to jwcrypto for JWT
  "starlette>=0.30.0", # Needed by A2A common server (used in tests/samples)
  "sse-starlette>=1.0.0", # Needed by A2A common server for streaming
  "uvicorn>=0.20.0", # Needed by A2A common server (used in tests/samples)
  "python-dotenv>=1.0.0", # Added for loading .env files
]
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Intended Audience :: Developers",
]

[tool.hatch.version]
path = "src/__init__.py" # Assuming version is stored here

[tool.hatch.build.targets.wheel]
packages = ["src/agents"] # Include the agents directory in the wheel

[tool.hatch.build.targets.wheel.force-include]
# Ensure plugin structure is included in the wheel relative to a 'sam_a2a_client' root
"src" = "sam_a2a_client/src"
"configs" = "sam_a2a_client/configs" # Add if config templates are created
"solace-agent-mesh-plugin.yaml" = "sam_a2a_client/solace-agent-mesh-plugin.yaml"

# Optional: Add linters and formatters
# [tool.black]
# line-length = 88
# [tool.ruff]
# line-length = 88
# select = ["E", "W", "F", "I", "UP", "B", "C4"] # Example selection
# ignore = ["E501"] # Ignore line length, handled by black
# [tool.mypy]
# python_version = "3.10"
# warn_return_any = true
# warn_unused_configs = true
# ignore_missing_imports = true # May be needed depending on A2A common lib structure
