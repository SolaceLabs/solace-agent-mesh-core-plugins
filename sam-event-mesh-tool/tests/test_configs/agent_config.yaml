# Test configuration for the agent hosting the EventMeshTool.
# This agent acts as the "client" in the integration tests.

log:
  stdout_log_level: INFO

shared_config:
  - broker_connection: &broker_connection
      dev_mode: true
      broker_type: solace # Explicitly use solace dev broker
      # Dummy values to satisfy validation in dev_mode
      broker_url: "dev-broker"
      broker_username: "dev-user"
      broker_password: "dev-password"
      broker_vpn: "dev-vpn"

apps:
  - name: test-agent-app
    app_base_path: .
    app_module: solace_agent_mesh.agent.sac.app
    broker:
      <<: *broker_connection
    
    # SamAgentApp configuration - all config goes in app_config
    app_config:
      # Required fields for SamAgentAppConfig
      namespace: "test"
      agent_name: "TestAgent"
      model:
        model: "mock-model" # Dummy model for testing, not used by the tool.
      
      # Required agent card configuration
      agent_card:
        description: "A test agent for the EventMeshTool."
        defaultInputModes: ["text"]
        defaultOutputModes: ["text"]
        skills: []
      
      # Required agent card publishing configuration
      agent_card_publishing:
        interval_seconds: 1000
      
      # Required service configurations
      session_service:
        type: "memory"
        default_behavior: "PERSISTENT"
      
      artifact_service:
        type: "memory"
        artifact_scope: "namespace"
      
      # The multi-session manager must be enabled for the EventMeshTool to create sessions.
      multi_session_request_response:
        enabled: true
        # Use the dev broker as the default for any sessions created.
        default_broker_config:
          <<: *broker_connection

      # Tool configuration
      tools:
        - tool_type: python
          component_module: "sam_event_mesh_tool.tools"
          class_name: "EventMeshTool"
          tool_config:
            # --- Connection & Session Configuration ---
            # This config is passed to create_request_response_session.
            event_mesh_config:
              # Use the shared broker connection config.
              broker_config:
                <<: *broker_connection
              request_expiry_ms: 20000000 # Use a short timeout for tests.
              payload_format: "json"

            # --- Tool Definition for LLM ---
            tool_name: "EventMeshRequest"
            description: "Sends a request to the test event mesh."

            # --- Tool Parameters ---
            parameters:
              - name: "request_data"
                type: "string"
                required: true
                description: "The data to send in the request."
                payload_path: "data" # Maps to {"data": "..."} in the payload

            # --- Per-Request Configuration ---
            topic: "test/request/tool"
            wait_for_response: true
