# Configuration file for the MongoDB agent.
#
# Provides natural language query capabilities for a MongoDB database.
#
# When creating a new agent instance using `solace-agent-mesh add agent <new_agent_name> --copy-from sam_mongodb:mongodb`,
# the placeholders {{SNAKE_CASE_NAME}} and {{SNAKE_UPPER_CASE_NAME}} will be replaced with the new agent name.
#
# Requires the following environment variables:
# - SOLACE_BROKER_URL
# - SOLACE_BROKER_USERNAME
# - SOLACE_BROKER_PASSWORD
# - SOLACE_BROKER_VPN
# - SOLACE_AGENT_MESH_NAMESPACE
# - {{SNAKE_UPPER_CASE_NAME}}_MONGO_HOST
# - {{SNAKE_UPPER_CASE_NAME}}_MONGO_PORT
# - {{SNAKE_UPPER_CASE_NAME}}_MONGO_DB
# - {{SNAKE_UPPER_CASE_NAME}}_MONGO_USER (Optional)
# - {{SNAKE_UPPER_CASE_NAME}}_MONGO_PASSWORD (Optional)
# - {{SNAKE_UPPER_CASE_NAME}}_MONGO_COLLECTION (Optional) - If not set, agent will try to access all collections.
# - {{SNAKE_UPPER_CASE_NAME}}_DB_PURPOSE (Required) - Description of the database purpose.
# - {{SNAKE_UPPER_CASE_NAME}}_DB_DESCRIPTION (Required) - Detailed description of the data.

---
log:
  stdout_log_level: INFO
  log_file_level: INFO
  log_file: solace_ai_connector.log

shared_config:
  - broker_config: &broker_connection
      dev_mode: ${SOLACE_DEV_MODE, false}
      broker_url: ${SOLACE_BROKER_URL}
      broker_username: ${SOLACE_BROKER_USERNAME}
      broker_password: ${SOLACE_BROKER_PASSWORD}
      broker_vpn: ${SOLACE_BROKER_VPN}

flows:

  # Flow to handle action requests
  - name: {{SNAKE_CASE_NAME}}_action_request_processor
    components:
      # Input from a Solace broker
      - component_name: broker_input
        component_module: broker_input
        component_config:
          <<: *broker_connection
          payload_encoding: utf-8
          payload_format: json
          broker_queue_name: ${SOLACE_AGENT_MESH_NAMESPACE}agent_{{SNAKE_CASE_NAME}}_action_request
          broker_subscriptions:
            - topic: ${SOLACE_AGENT_MESH_NAMESPACE}solace-agent-mesh/v1/actionRequest/*/*/{{SNAKE_CASE_NAME}}/>
              qos: 1

      # Custom component to process the action request
      - component_name: action_request_processor
         # path is completed at build time
        component_module: {{MODULE_DIRECTORY}}.agents.mongodb.mongodb_agent_component
        component_config:
          agent_name: {{SNAKE_CASE_NAME}}
          database_host: ${{{SNAKE_UPPER_CASE_NAME}}_MONGO_HOST}
          database_port: ${{{SNAKE_UPPER_CASE_NAME}}_MONGO_PORT}
          database_user: ${{{SNAKE_UPPER_CASE_NAME}}_MONGO_USER, ""} # Optional
          database_password: ${{{SNAKE_UPPER_CASE_NAME}}_MONGO_PASSWORD, ""} # Optional
          database_name: ${{{SNAKE_UPPER_CASE_NAME}}_MONGO_DB}
          database_collection: ${{{SNAKE_UPPER_CASE_NAME}}_MONGO_COLLECTION, ""} # Optional
          database_purpose: ${{{SNAKE_UPPER_CASE_NAME}}_DB_PURPOSE}
          data_description: ${{{SNAKE_UPPER_CASE_NAME}}_DB_DESCRIPTION}
          auto_detect_schema: ${{{SNAKE_UPPER_CASE_NAME}}_AUTO_DETECT_SCHEMA, true} # Default to true
          max_inline_results: ${{{SNAKE_UPPER_CASE_NAME}}_MAX_INLINE_RESULTS, 10} # Default to 10
          llm_service_topic: ${SOLACE_AGENT_MESH_NAMESPACE}solace-agent-mesh/v1/llm-service/request/general-good/
          embedding_service_topic: ${SOLACE_AGENT_MESH_NAMESPACE}solace-agent-mesh/v1/embedding-service/request/text/
        broker_request_response:
          enabled: true
          broker_config: *broker_connection
          request_expiry_ms: 120000
          payload_encoding: utf-8
          payload_format: json
          response_topic_prefix: ${SOLACE_AGENT_MESH_NAMESPACE}solace-agent-mesh/v1
          response_queue_prefix: ${SOLACE_AGENT_MESH_NAMESPACE}solace-agent-mesh/v1
        component_input:
          source_expression: input.payload

      # Output to a Solace broker
      - component_name: broker_output
        component_module: broker_output
        component_config:
          <<: *broker_connection
          payload_encoding: utf-8
          payload_format: json
          copy_user_properties: true
